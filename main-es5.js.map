{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/planning/categories/categories.component.html","webpack:///src/app/planning/categories/categories.component.ts","webpack:///src/app/planning/categories/category-create-dialog.html","webpack:///src/app/planning/items/card/item-card.component.ts","webpack:///src/app/planning/items/card/item-card.component.html","webpack:///src/app/planning/items/dialogs/item.create.dialog.html","webpack:///src/app/planning/items/dialogs/item.create.dialog.ts","webpack:///src/app/planning/items/items.component.html","webpack:///src/app/planning/items/items.component.ts","webpack:///src/app/planning/models/planning.models.ts","webpack:///src/app/planning/planning.component.ts","webpack:///src/app/planning/planning.component.html","webpack:///src/app/planning/planning.module.ts","webpack:///src/app/planning/planning.routing.ts","webpack:///src/app/planning/services/planning.service.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","loadChildren","canActivate","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","authService","title","currentUser","subscribe","x","logout","location","reload","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","authenticationService","route","state","currentUserValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","JwtInterceptor","accessToken","clone","setHeaders","Authorization","LoginComponent","formBuilder","loading","submitted","loginForm","group","username","required","password","snapshot","invalid","login","f","value","data","error","controls","onSubmit","MaterialModule","CategoriesComponent","planningService","dialog","icons","faPlus","activeCategoryChange","newCat","dialogRef","open","DialogOverviewExampleDialog","width","afterClosed","result","createdCategory","loadCategories","activeCategoryId","Number","firstChild","params","categoryId","events","event","getCategories","categories","filterDisplayedCategories","category","activeCategory","emit","displayedCategories","filter","cat","name","toLowerCase","indexOf","activateCategory","find","c","openCreateDialog","close","createCategory","alert","JSON","stringify","validations","onNoClick","save","ItemCardComponent","ItemCreateDialogComponent","itemTypes","ACTION","EVENT","TASK","tags","createItem","item","tag","push","splice","addTag","ItemsComponent","items","getCategory","loadItems","getItems","BaseEntityModel","Category","ItemType","Item","ListRelationsType","List","ListItem","PlanningComponent","PlanningModule","children","PlanningRoutingModule","forChild","PlanningService","http","baseUrl","apiUrl","resource","get","toPromise","toString","post","itemAttrs","description","type","RegisterComponent","AuthService","currentUserSubject","parse","localStorage","getItem","asObservable","email","userDTO","setItem","console","log","jwtDecode","removeItem","t","token","raw","header","window","atob","split","payload","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./planning/planning.module\": \"./src/app/planning/planning.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './helpers/auth.guard';\n\n\nconst routes: Routes = [\n  { path: 'planning', loadChildren: './planning/planning.module#PlanningModule', canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n\n  {path: '*', redirectTo: ''},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { AuthenticatedUserDTO } from './models/user.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  currentUser: AuthenticatedUserDTO;\n  title = 'plantask-fe';\n\n  constructor(\n    private authService: AuthService,\n  ) {\n    this.authService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authService.logout();\n    location.reload();\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/planning\">Home</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a>\n    <a *ngIf=\"!currentUser\" class=\"nav-item nav-link\" routerLink=\"/register\">Register</a>\n    <a class=\"nav-item nav-link float-right\" (click)=\"logout()\">Logout</a>\n\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { PlanningModule } from './planning/planning.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    PlanningModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // authorised so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.authenticationService.logout();\n        location.reload();\n      }\n\n      return throwError(err);\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser && currentUser.accessToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.accessToken}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error: string;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n  ) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/planning']);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/planning';\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authService.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n}\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Login\n    </button>\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  exports: [FormsModule, MatDialogModule, MatFormFieldModule, MatButtonModule, MatInputModule, MatSelectModule]\n})\nexport class MaterialModule {}\n","<!--<ul class=\"list-group\" *ngIf=\"categories\">-->\n<!--  <li class=\"list-group-item create-category-input\">-->\n<!--    <div class=\"input-group\">-->\n<!--        <input name=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Category name\" aria-label=\"Category\"-->\n<!--          ngModel required [(ngModel)]=\"filter\"  (keyup)=\"filterDisplayedCategories()\"-->\n<!--        >-->\n<!--      <div class=\"input-group-prepend clickable\">-->\n<!--        <span class=\"input-group-text\" id=\"basic-addon1\" (click)=\"createCategory(filter)\">+</span>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </li>-->\n<!--  <li class=\"list-group-item\" (click)=\"clearCategory()\">View All</li>-->\n<!--  <li-->\n<!--    *ngFor=\"let cat of displayedCategories\"-->\n<!--    class=\"list-group-item\"-->\n<!--    [ngClass]=\"activeCategory===cat? 'active' : null\"-->\n<!--    (click)=\"activateCategory(cat)\"-->\n<!--  >{{cat.name}}</li>-->\n<!--</ul>-->\n\n<div class=\"sidebar-heading\">Categories: <button mat-raised-button class=\"float-right\" (click)=\"openCreateDialog()\">Add</button></div>\n<div class=\"list-group list-group-flush list-group-sidebar\">\n  <a\n    *ngFor=\"let cat of displayedCategories\"\n    (click)=\"activateCategory(cat)\"\n    [ngClass]=\"activeCategoryId==cat.id? 'active' : null\"\n    class=\"list-group-item list-group-item-action\"\n  >\n    {{cat.name}}\n  </a>\n</div>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { PlanningService } from '../services/planning.service';\nimport { Category } from '../models/planning.models';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  icons = {\n    faPlus,\n  };\n  loading = false;\n  categories: Category[];\n  filter: string;\n  displayedCategories: Category[];\n  activeCategory: Category;\n  activeCategoryId: number;\n  @Output() activeCategoryChange = new EventEmitter<Category>();\n\n  constructor(\n    private planningService: PlanningService,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {}\n\n  openCreateDialog(): void {\n\n    const newCat = new Category();\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: newCat,\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.createdCategory(result);\n    });\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.loadCategories().then(() => this.loading = false);\n    this.activeCategoryId = Number(this.route.snapshot.firstChild.params.categoryId);\n    this.router.events\n      .subscribe((event) => {\n        if (event instanceof NavigationEnd) {\n          this.activeCategoryId = Number(this.route.snapshot.firstChild.params.categoryId);\n        }\n      });\n  }\n\n  async loadCategories() {\n    this.categories = await this.planningService.getCategories();\n    this.filterDisplayedCategories();\n  }\n\n  activateCategory(category: Category) {\n    this.activeCategoryId = category.id;\n    this.activeCategory = category;\n    this.activeCategoryChange.emit(category);\n  }\n\n  clearCategory() {\n    this.activeCategory = this.activeCategoryId = null;\n    this.activeCategoryChange.emit(null);\n  }\n\n  filterDisplayedCategories() {\n    this.displayedCategories =\n      this.filter\n        ? this.categories.filter(cat => cat.name.toLowerCase().indexOf(this.filter) !== -1)\n        : this.categories;\n  }\n\n  async createdCategory(category: Category) {\n    await this.loadCategories();\n    this.activateCategory(this.categories.find(c => c.id === category.id));\n    this.filter = '';\n    this.filterDisplayedCategories();\n  }\n}\n\n\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: 'category-create-dialog.html',\n})\n// tslint:disable-next-line:component-class-suffix\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: Category,\n    private planningService: PlanningService,\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  async save() {\n    try {\n      const cat = await(this.planningService.createCategory(this.data.name));\n      this.dialogRef.close(cat);\n    } catch (e) {\n      alert(JSON.stringify(e.error.validations));\n    }\n  }\n}\n","<h1 mat-dialog-title>Create category</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>New Category Name</mat-label>\n    <input matInput [(ngModel)]=\"data.name\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-button (click)=\"save()\" cdkFocusInitial>Save</button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Item } from '../../models/planning.models';\n\n@Component({\n  selector: 'app-item-card',\n  templateUrl: './item-card.component.html',\n  styleUrls: ['./item-card.component.css']\n})\nexport class ItemCardComponent implements OnInit {\n  @Input() item: Item;\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","<mat-card class=\"item-card\">\n  <mat-card-header>\n    <mat-card-title>\n      <a class=\"item-card-title\" routerLink=\"/planning/item/{{item.id}}\">{{item.name}}</a>\n      <div class=\"tags-container\">\n        <span class=\"tag\" *ngFor=\"let tag of item.tags\">#{{tag}}</span>\n      </div>\n    </mat-card-title>\n    <mat-card-subtitle class=\"item-card-subtitle\">{{item.description}}</mat-card-subtitle>\n  </mat-card-header>\n</mat-card>\n","<h1 mat-dialog-title>Create Item</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Category Name</mat-label>\n    <input matInput [(ngModel)]=\"data.name\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Category Type</mat-label>\n    <mat-select [(ngModel)]=\"data.type\">\n      <mat-option *ngFor=\"let type of itemTypes\" [value]=\"type.value\">\n        {{type.title}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <textarea [(ngModel)]=\"data.description\" matInput placeholder=\"Type description here...\"></textarea>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Tags:</mat-label>\n    <input matInput [(ngModel)]=\"tag\" (keyup.enter)=\"addTag()\">\n    <span class=\"remove-tag\" *ngFor=\"let tag of data.tags\" (click)=\"removeTag(tag)\">{{tag}}</span>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-button (click)=\"save()\" cdkFocusInitial>Save</button>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Item, ItemType } from '../../models/planning.models';\nimport { PlanningService } from '../../services/planning.service';\n\n@Component({\n  selector: 'app-item-create-dialog',\n  templateUrl: 'item.create.dialog.html',\n  styleUrls: ['item.create.dialog.css']\n})\nexport class ItemCreateDialogComponent {\n  tag: string;\n  itemTypes = [\n    { title: 'Action', value: ItemType.ACTION },\n    { title: 'Event', value: ItemType.EVENT },\n    { title: 'Task', value: ItemType.TASK },\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<ItemCreateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Item,\n    private planningService: PlanningService,\n  ) {\n    if (!this.data.tags) { this.data.tags = []; }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  async save() {\n    try {\n      const item = await this.planningService.createItem(this.data);\n      this.dialogRef.close(item);\n    } catch (e) {\n      alert(JSON.stringify(e.error.validations));\n    }\n  }\n\n  addTag() {\n    if (this.tag) { this.data.tags.push(this.tag); }\n    this.tag = null;\n  }\n\n  removeTag(tag: string) {\n    this.data.tags.splice(this.data.tags.indexOf(tag), 1);\n  }\n}\n","<h2 *ngIf=\"category\">{{category.name}}: Items:</h2>\n<button *ngIf=\"category\" (click)=\"openCreateDialog()\" mat-raised-button>Create Item</button>\n<app-item-card *ngFor=\"let item of items\" [item]=\"item\"></app-item-card>\n","import { Component, OnInit } from '@angular/core';\nimport { PlanningService } from '../services/planning.service';\nimport { Category, Item } from '../models/planning.models';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ItemCreateDialogComponent } from './dialogs/item.create.dialog';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n  loading = false;\n  category: Category;\n  items: Item[] = [];\n\n  constructor(\n    private planningService: PlanningService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.route.params.subscribe(async params => {\n      const categoryId = params.categoryId;\n      if (categoryId != null) {\n        this.category = await this.planningService.getCategory(categoryId);\n        this.loadItems(this.category?.id).then(() => this.loading = false);\n      }\n    });\n  }\n\n  async loadItems(categoryId?: number) {\n    if (!categoryId) { categoryId = this.category.id; }\n    this.items = await this.planningService.getItems(categoryId);\n  }\n\n  viewItem(id: number) {\n    this.router.navigate(['planning/item', id]);\n  }\n\n  openCreateDialog(): void {\n\n    const newCat = new Item();\n    newCat.categoryId = this.category.id;\n    const dialogRef = this.dialog.open(ItemCreateDialogComponent, {\n      width: '400px',\n      data: newCat,\n    });\n\n    dialogRef.afterClosed().subscribe(async result => {\n      await this.loadItems();\n    });\n  }\n}\n","export class BaseEntityModel {\n  id: number;\n  tags: string[];\n}\n\nexport class Category extends BaseEntityModel {\n  name: string;\n}\n\n// TODO: extract enums to separate package for reusing on both BE and FE\nexport enum ItemType {\n  ACTION = 'action',\n  EVENT = 'event',\n  TASK = 'task',\n}\n\nexport class Item extends BaseEntityModel {\n  name: string;\n  description: string;\n  type: ItemType;\n  categoryId: number;\n}\n\nexport enum ListRelationsType {\n  ORDERED = 'ordered',\n  UNORDERED = 'unordered',\n}\n\nexport class List extends BaseEntityModel {\n  name: string;\n  relationsType: ListRelationsType;\n  itemId: number;\n  listItems?: ListItem[];\n}\n\nexport class ListItem extends BaseEntityModel {\n  label: string;\n  isCompleted: boolean;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from './models/planning.models';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './planning.component.html',\n  styleUrls: ['./planning.component.css']\n})\nexport class PlanningComponent implements OnInit {\n  activeCategory: Category;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  activateCategory(category: Category) {\n    this.activeCategory = category;\n    this.router.navigate(['planning/category', `${category?.id || ''}`]);\n  }\n}\n","<div class=\"d-flex\" id=\"wrapper\">\n  <div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n    <app-categories\n      (activeCategoryChange)=\"activateCategory($event)\"\n    ></app-categories>\n  </div>\n  <div id=\"page-content-wrapper\">\n    <div class=\"container-fluid\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlanningComponent } from './planning.component';\nimport { CategoriesComponent, DialogOverviewExampleDialog } from './categories/categories.component';\nimport { ItemsComponent } from './items/items.component';\nimport { FormsModule } from '@angular/forms';\nimport { PlanningRoutingModule } from './planning.routing';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MaterialModule } from '../material/material.module';\nimport { ItemCardComponent } from './items/card/item-card.component';\nimport { ItemCreateDialogComponent } from './items/dialogs/item.create.dialog';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    PlanningComponent,\n    CategoriesComponent,\n    ItemsComponent,\n    DialogOverviewExampleDialog,\n    ItemCardComponent,\n    ItemCreateDialogComponent\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    PlanningRoutingModule,\n    RouterModule,\n    FontAwesomeModule,\n    MaterialModule,\n    MatCardModule,\n  ],\n  bootstrap: [PlanningComponent]\n})\nexport class PlanningModule { }\n","import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { PlanningComponent } from './planning.component';\nimport { ItemsComponent } from './items/items.component';\n\n\nconst routes = [\n  {\n    path: '',\n    component: PlanningComponent,\n    children: [\n      {path: '', component: ItemsComponent },\n      {path: 'category/:categoryId', component: ItemsComponent},\n      {path: 'item/:itemId', component: ItemsComponent}\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlanningRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Category, Item } from '../models/planning.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanningService {\n  baseUrl = `${environment.apiUrl}/planning`;\n\n  constructor(private http: HttpClient) { }\n\n  private url(resource, id?) {\n    const route = `${this.baseUrl}/${resource}`;\n\n    if (id) { return route + `/${id}`; }\n    return route;\n  }\n\n  getCategories(): Promise<Category[]> {\n    return this.http.get<Category[]>(this.url('category')).toPromise();\n  }\n\n\n  getItems(categoryId: number): Promise<Item[]> {\n    let params = {};\n    if (categoryId) {\n      params = {\n        categoryId: categoryId.toString(10),\n      };\n    }\n    return this.http.get<Item[]>(this.url('item'), { params })\n      .toPromise();\n  }\n\n  async createCategory(name: string): Promise<Category> {\n    return this.http.post<Category>(this.url('category'), {\n      name\n    }).toPromise();\n  }\n\n  async getCategory(categoryId: number): Promise<Category> {\n    return this.http.get<Category>(this.url('category', categoryId)).toPromise();\n  }\n\n  createItem(itemAttrs: Partial<Item>): Promise<Item> {\n    const { name, description, tags, type, categoryId } = itemAttrs;\n    return this.http.post<Item>(this.url('item'), {\n      name, description, tags, type, categoryId,\n    }).toPromise();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { AuthenticatedUserDTO } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // TODO: Implement logic for refreshing tokens\n  // TODO: Check if tokens are not expired on page refreshing\n  // private refreshTokensInteval;\n  private currentUserSubject: BehaviorSubject<AuthenticatedUserDTO>;\n  public currentUser: Observable<AuthenticatedUserDTO>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n\n  login(email, password) {\n    return this.http.post<AuthenticatedUserDTO>(`${environment.apiUrl}/auth/login`, { email, password })\n      .pipe(map(userDTO => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(userDTO));\n        console.log(this.jwtDecode(userDTO.accessToken));\n        this.currentUserSubject.next(userDTO);\n        return userDTO;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  jwtDecode(t) {\n    const token = {\n      raw: t,\n      header: JSON.parse(window.atob(t.split('.')[0])),\n      payload:\n        JSON.parse(window.atob(t.split('.')[1])),\n    };\n    return (token);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}